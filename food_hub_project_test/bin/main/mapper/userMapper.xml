<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.application.foodhub.user.UserDAO">
	
	
	<!-- 회원가입 -->
	<insert id="register" parameterType="UserDTO">
		INSERT INTO USER (
			USER_ID,
			NICKNAME,
			EMAIL,
			TEL,
			GENDER,
			BIRTHDAY,
			MEMBERSHIP_TYPE,
			FOUNDING_AT,
			BUSINESS_TYPE,
			PASSWD,
			SMS_YN,
			EMAIL_YN,
			JOIN_AT,
			MODIFY_AT
		) 
		VALUES (
			#{userId},
			#{nickname},
			#{email},
			#{tel},
			#{gender},
			#{birthday},
			#{membershipType},
			#{foundingAt},
			#{businessType},
			#{passwd},
			#{smsYn},			
			#{emailYn},
			NOW(),
			NOW()
		 )
	</insert>
	
	<!-- 아이디 중복 체크 -->
	<select id="checkValidId" parameterType="String" resultType="String"> 
		SELECT USER_ID
		FROM   USER
		WHERE  BINARY USER_ID = #{userId}
	</select>
	
	<!-- 닉네임 중복 체크 -->
	<select id="checkValidNickname" parameterType="String" resultType="String"> 
		SELECT NICKNAME
		FROM   USER
		WHERE  BINARY NICKNAME = #{nickname}
	</select>
	
	<!-- 이메일 중복 체크 -->
	<select id="checkValidEmail" parameterType="String" resultType="String"> 
		SELECT EMAIL
		FROM   USER
		WHERE  BINARY EMAIL = #{email}
	</select>
	
	<!-- 암호화한 비밀번호 불러오기 -->
	<select id="getEncodedPasswd" parameterType="String" resultType="String">
		SELECT 	PASSWD
		FROM 	USER
		WHERE	BINARY USER_ID = #{userId}
	</select>
	
	<!-- 유저 정보 불러오기 -->
	<select id="getUserDetail" parameterType="String" resultType="UserDTO">
		SELECT	*
		FROM	USER
		WHERE 	USER_ID = #{userId}
	</select>
	
	<!-- 유저 아이디를 통해 닉네임 불러오기 -->
	<select id="findNicknameByUserId" parameterType="string" resultType="string">
    	SELECT 	NICKNAME 
    	FROM 	USER 
    	WHERE 	USER_ID = #{userId}
	</select>
	
	<!-- 유저 정보 수정 -->
	<update id="updateUser" parameterType="UserDTO">
		UPDATE	USER
		SET		PROFILE_ORIGINAL 	  = #{profileOriginal},
				PROFILE_UUID 		  = #{profileUUID},
				NICKNAME			  = #{nickname},
				TEL					  = #{tel},
				FOUNDING_AT			  = #{foundingAt},
				MEMBERSHIP_TYPE		  =	#{membershipType},	
				BUSINESS_TYPE         = #{businessType},
				SMS_YN				  = #{smsYn},			
				EMAIL_YN			  = #{emailYn}, 
				EMAIL 				  = #{email}, 
				MODIFY_AT 			  = NOW() 
		WHERE	USER_ID = #{userId}
	</update>
	
	<!-- (회원탈퇴)회원탈퇴할 유저프로필 정보 조회 -->
    <select id="getDeleteUserProfile" resultType="String">
      SELECT 	PROFILE_UUID
      FROM   	USER
      WHERE  	USER_ID = #{userId}
    </select>
   
    <!-- (회원탈퇴)유저정보 삭제 -->
    <delete id="deleteUser" parameterType="String">
      DELETE 	FROM USER
      WHERE     USER_ID = #{userId}
    </delete>
    
    <!-- 이메일과 전화번호를 받아서 아이디 찾기 -->
    <select id="findId" parameterType="map" resultType="String">
    	SELECT  USER_ID
    	FROM	USER
    	WHERE	BINARY EMAIL = #{email}
    	AND		TEL = #{tel}
    </select>
    
    <!-- 비밀번호 찾기 - 입력한 정보가 존재하는지 -->
    <select id="findPasswd" parameterType="map" resultType="String">
    	SELECT	PASSWD
    	FROM	USER
    	WHERE	BINARY USER_ID = #{userId}
    	AND		BINARY EMAIL = #{email}
    	AND		TEL = #{tel}
    </select>
    
    <!-- 비밀번호 재설정 -->
    <update id="resetPassword" parameterType="userDTO">
		UPDATE	USER
		SET		PASSWD = #{passwd}
		WHERE	BINARY USER_ID = #{userId}
    </update>
    
</mapper>