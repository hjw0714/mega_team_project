<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.application.foodhub.chat.ChatDAO">

<select id="findPrivateRoomsByUser" resultType="ChatRoomDTO">
    SELECT 
        c.ROOM_ID,
        c.PRTCP_USER1,
        c.PRTCP_USER2,
        c.STATUS,
        c.CREATED_AT,
        c.UPDATED_AT,
        c.DELETED_AT,
        CASE
            WHEN c.PRTCP_USER1 = #{userId} THEN u2.NICKNAME
            ELSE u1.NICKNAME
        END AS otherUserNickname,
        CASE
            WHEN c.PRTCP_USER1 = #{userId} THEN u2.USER_ID
            ELSE u1.USER_ID
        END AS otherUserId
    FROM CHAT_ROOM c
    JOIN USER u1 ON u1.USER_ID = c.PRTCP_USER1
    JOIN USER u2 ON u2.USER_ID = c.PRTCP_USER2
    WHERE (c.PRTCP_USER1 = #{userId} OR c.PRTCP_USER2 = #{userId})
      AND c.STATUS = 'ACTIVE'
</select>


    
      <!-- 두 유저 사이의 채팅방 존재 여부 확인 -->
    <select id="findRoomBetweenUsers" resultType="ChatRoomDTO">
    SELECT *
    FROM CHAT_ROOM
    WHERE STATUS = 'ACTIVE'
      AND (
        (PRTCP_USER1 = #{userId1} AND PRTCP_USER2 = #{userId2})
        OR
        (PRTCP_USER1 = #{userId2} AND PRTCP_USER2 = #{userId1})
      )
    LIMIT 1
</select>


    <!-- 새로운 채팅방 생성 -->
    <insert id="insertRoom">
        INSERT INTO CHAT_ROOM (PRTCP_USER1, PRTCP_USER2)
        VALUES (#{userId1}, #{userId2})
    </insert>
    
    
    <insert id="insertChatMessage">
    	INSERT INTO CHAT_MESSAGE (ROOM_ID, SENDER_ID, RECEIVE_ID, CHAT_CONTENT)
    	VALUES (#{roomId}, #{senderId}, #{receiveId}, #{chatContent})
	</insert>

<select id="getMessagesByRoomId" resultType="ChatMessageDTO">
    SELECT
        m.ROOM_ID,
        m.SENDER_ID AS senderId,
        m.RECEIVE_ID AS receiveId,
        m.CHAT_CONTENT AS chatContent,
        m.CREATED_AT AS createdAt,
        u.NICKNAME AS sender
    FROM CHAT_MESSAGE m
    JOIN USER u ON m.SENDER_ID = u.USER_ID
    WHERE m.ROOM_ID = #{roomId}
    ORDER BY m.CREATED_AT ASC
</select>

	
	<select id="findRoomById" resultType="ChatRoomDTO">
    	SELECT * FROM CHAT_ROOM WHERE ROOM_ID = #{roomId}
	</select>
	
	
	<update id="updateChatRoomStatusToDeleted">
    UPDATE CHAT_ROOM
    SET STATUS = 'DELETED',
        DELETED_AT = NOW()
    WHERE ROOM_ID = #{roomId}
</update>
	
	

</mapper>